version: '3'

networks:
  network-1:
    driver: bridge

services:
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    # restart: unless-stopped
    # working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - pgsql
    container_name: 'back'
    # ports:
    #   - "5499:9000"
    networks:
      - network-1
  reverb:
    build:
        context: .
        dockerfile: ./docker/reverb/Dockerfile
    container_name: reverb
    ports:
        - 8080:8080
    volumes:
        - ./back:/var/www
    # working_dir: /var/www
    networks:
        - network-1
    depends_on:
        - backend
  php-queue:
    # restart: always
    build: 
      context: .
      dockerfile: ./docker/queue/Dockerfile
    # command: php artisan queue:work
    volumes:
        - ./back:/var/www
    depends_on:
        - backend
    container_name: database_queue
    networks:
        - network-1
  nginx:
    image: nginx
    # restart: unless-stopped
    ports:
      - "8000:8000" 
    volumes:
      - .:/var/www 
      - ./docker/nginx/back/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - backend
    container_name: 'nginx'
    networks:
      - network-1
  pgsql:
    image: postgres:15
    restart: always
    ports:
      - "5501:5432"
    environment:
      POSTGRES_DB: 'vkvadrate'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'ENTER YOUR PASSWORD'
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    container_name: 'pgsql'
    networks:
      - network-1
  front:
    # image: node:18
    build:
        context: .
        dockerfile: ./docker/frontend/Dockerfile
    ports:
        - "3000:80"
    volumes:
        - ./front:/var/www
        - ./docker/nginx/front/conf.d/nginx.conf:/etc/nginx/nginx.conf
    container_name: 'front'
    networks:
      - network-1

# volumes:
#   dbdata:
#     driver: local



